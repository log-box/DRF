{"version":3,"sources":["components/TodoUsers.js","components/footer.js","components/header.js","components/TodoDetail.js","components/Todo.js","components/Projects.js","components/TodoByProject.js","components/Auth.js","components/ProjectForm.js","App.js","reportWebVitals.js","index.js"],"names":["TodoUser","todouser","username","first_name","last_name","email","TodoUsersList","todousers","map","TodoFooter","className","Component","TodoHeader","class","Todo","todo","deleteTodo","id","project","todo_text","created","updated","user","is_active","toString","type","onClick","TodoList","todos","Project","deleteProject","project_name","project_user","repository","ProjectsList","projects","to","TodoByProject","useParams","console","log","todos_filtered","filter","includes","parseInt","LoginForm","proms","state","login","password","event","this","setState","target","name","value","props","get_token","preventDefault","onSubmit","handleSubmit","placeholder","onChange","handleChange","React","ProjectForm","selectedOptions","i","length","push","item","createProject","htmlFor","multiple","handleProjectChange","NotFound404","location","pathname","App","headers","get_headers","axios","get","then","response","data","catch","error","results","token","Cookies","set","load_data","delete","post","set_token","alert","is_authenticated","get_token_from_storage","logout","exact","path","component","TodoUsers","Projects","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0abf1ea6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst TodoUser = ({todouser}) => {\r\n   return (\r\n       <tr>\r\n           <td>\r\n               {todouser.username}\r\n           </td>\r\n           <td>\r\n               {todouser.first_name}\r\n           </td>\r\n           <td>\r\n               {todouser.last_name}\r\n           </td>\r\n           <td>\r\n               {todouser.email}\r\n           </td>\r\n       </tr>\r\n   )\r\n}\r\n\r\nconst TodoUsersList = ({todousers}) => {\r\n   return (\r\n       <table>\r\n           <th>\r\n               TodoUserName\r\n           </th>\r\n           <th>\r\n               First name\r\n           </th>\r\n           <th>\r\n               Last Name\r\n           </th>\r\n           <th>\r\n               Email\r\n           </th>\r\n           {\r\n               todousers.map((todouser) => <TodoUser todouser={todouser} />)\r\n           }\r\n       </table>\r\n   )\r\n}\r\n\r\n\r\nexport default TodoUsersList","import React, {Component} from 'react';\r\n\r\n\r\nclass TodoFooter extends Component{\r\n  render(){\r\n    return (<div className='footer'>Footer</div>);\r\n  }\r\n}\r\nexport default TodoFooter;","import React, {Component} from 'react';\r\n// import '../bootstrap/dist/css/bootstrap.min.css';\r\nimport './style.css'\r\n\r\nclass TodoHeader extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"header\">\r\n                {/*<div class='menu'>*/}\r\n                {/*    <ul>*/}\r\n                {/*        <li>*/}\r\n                {/*            <a href=\"http://127.0.0.1:8000/api/users\">Пользователи (API)</a>*/}\r\n                {/*        </li>*/}\r\n                {/*        <li>*/}\r\n                {/*            <a href=\"http://127.0.0.1:3000\">Домой</a>*/}\r\n                {/*        </li>*/}\r\n                {/*    </ul>*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoHeader;","const Todo = ({todo, deleteTodo}) => {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                {todo.id}\r\n            </td>\r\n            <td>\r\n                {todo.project}\r\n            </td>\r\n            <td>\r\n                {todo.todo_text}\r\n            </td>\r\n            <td>\r\n                {todo.created}\r\n            </td>\r\n            <td>\r\n                {todo.updated}\r\n            </td>\r\n            <td>\r\n                {todo.user}\r\n            </td>\r\n            <td>\r\n                {(todo.is_active).toString()}\r\n            </td>\r\n            <td>\r\n                <button type='button' onClick={() => deleteTodo(todo.id)}> Удалить</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react'\r\nimport Todo from \"./TodoDetail\";\r\n\r\n\r\nconst TodoList = ({todos, deleteTodo}) => {\r\n    return (\r\n        <table>\r\n            <th>\r\n                TodoId\r\n            </th>\r\n            <th>\r\n                TodoProject\r\n            </th>\r\n            <th>\r\n                Text\r\n            </th>\r\n            <th>\r\n                Created\r\n            </th>\r\n            <th>\r\n                Updated\r\n            </th>\r\n            <th>\r\n                User\r\n            </th>\r\n            <th>\r\n                Статус\r\n            </th>\r\n            <th>\r\n\r\n            </th>\r\n            {\r\n                todos.map((todo) => <Todo todo={todo} deleteTodo={deleteTodo}/>)\r\n            }\r\n        </table>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoList","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Project = ({project, deleteProject}) => {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                {project.id}\r\n            </td>\r\n            <td>\r\n                {project.project_name}\r\n            </td>\r\n            <td>\r\n                {project.project_user}\r\n            </td>\r\n            <td>\r\n                {project.repository}\r\n            </td>\r\n            <td>\r\n                <button type='button' onClick={() => deleteProject(project.id)}> Удалить</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst ProjectsList = ({projects, deleteProject}) => {\r\n    return (\r\n        <div>\r\n            <table>\r\n                <th>\r\n                    Project ID\r\n                </th>\r\n                <th>\r\n                    Project name\r\n                </th>\r\n                <th>\r\n                    Project user\r\n                </th>\r\n                <th>\r\n                    Project repository\r\n                </th>\r\n                <th>\r\n\r\n                </th>\r\n                {\r\n                    projects.map((project) => <Project project={project} deleteProject={deleteProject}/>)\r\n                }\r\n            </table>\r\n\r\n            <Link to='/projects/create'>Создать проект</Link>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ProjectsList","import Todo from \"./TodoDetail\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst TodoByProject = ({todos}) => {\r\n\r\n    let {id} = useParams();\r\n    console.log({id})\r\n\r\n    let todos_filtered = todos.filter((todo => todo.project.includes(parseInt(id))))\r\n\r\n   return (\r\n       <table>\r\n           <th>\r\n               TodoProject\r\n           </th>\r\n           <th>\r\n               Text\r\n           </th>\r\n           <th>\r\n               Created\r\n           </th>\r\n           <th>\r\n               Updated\r\n           </th>\r\n           <th>\r\n               User\r\n           </th>\r\n           {\r\n               todos_filtered.map((todo) => <Todo todo={todo} />)\r\n           }\r\n       </table>\r\n   )\r\n}\r\n\r\n\r\nexport default TodoByProject","import React from \"react\";\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(proms) {\r\n        super(proms);\r\n        this.state = {\r\n            login: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n        console.log([event.target.name], event.target.value)\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.get_token(this.state.login, this.state.password)\r\n        // console.log(this.state.login + ' ' + this.state.password)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(event) => this.handleSubmit(event)}>\r\n                <input type=\"text\" name=\"login\" placeholder=\"login\" value={this.state.login}\r\n                       onChange={(event) => this.handleChange(event)}/>\r\n                <input type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password}\r\n                       onChange={(event) => this.handleChange(event)}/>\r\n                <input type=\"submit\" value=\"Login\"/>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default LoginForm","import React from \"react\";\r\n\r\n\r\nclass ProjectForm extends React.Component {\r\n    constructor(proms) {\r\n        super(proms);\r\n        this.state = {\r\n            project_name: '',\r\n            project_user: []\r\n            // proms.todousers.id\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n        console.log([event.target.name], event.target.value)\r\n    }\r\n\r\n    handleProjectChange(event){\r\n        if(!event.target.selectedOptions){\r\n            this.setState({\r\n                'project_user': []\r\n            })\r\n            return;\r\n        }\r\n        let project_user = []\r\n        for(let i=0; i<event.target.selectedOptions.length; i++){\r\n            project_user.push(event.target.selectedOptions.item(i).value)\r\n        }\r\n        this.setState({\r\n            'project_user': project_user\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        // this.props.get_token(this.state.login, this.state.password)\r\n        // console.log(this.state.project_name + ' ' + this.state.project_user)\r\n        this.props.createProject(this.state.project_name, this.state.project_user)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(event) => this.handleSubmit(event)}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"login\">projectName</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"project_name\" value={this.state.project_name}\r\n                           onChange={(event) => this.handleChange(event)}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"author\">user</label>\r\n\r\n                    <select name=\"project_user\"  multiple onChange={(event) => this.handleProjectChange(event)}>\r\n                        {this.props.todousers.map((item) => <option value={item.id}>{item.username}</option>)}\r\n                    </select>\r\n\r\n                    {/*<input type=\"number\" className=\"form-control\" name=\"project_user\" value={this.state.project_user}*/}\r\n                    {/*       onChange={(event) => this.handleChange(event)}/>*/}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\"/>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ProjectForm","import React from 'react';\r\nimport './App.css';\r\nimport TodoUsersList from \"./components/TodoUsers\";\r\nimport TodoFooter from \"./components/footer\"\r\nimport axios from 'axios'\r\nimport TodoHeader from \"./components/header\";\r\nimport Todo from \"./components/Todo\";\r\nimport Projects from \"./components/Projects\";\r\nimport {HashRouter, Link, Route, Switch} from \"react-router-dom\";\r\nimport TodoByProject from \"./components/TodoByProject\";\r\nimport LoginForm from \"./components/Auth\";\r\nimport Cookies from 'universal-cookie';\r\nimport ProjectForm from \"./components/ProjectForm\";\r\n\r\nconst NotFound404 = ({location}) => {\r\n    return (\r\n        <div>\r\n            <h1>Страница по адресу '{location.pathname}' не найдена</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            'todousers': [],\r\n            'todos': [],\r\n            'projects': [],\r\n            'token': []\r\n        }\r\n    }\r\n\r\n    load_data() {\r\n\r\n        const headers = this.get_headers()\r\n\r\n        axios.get('http://127.0.0.1:8000/api/users', {headers})\r\n            .then(response => {\r\n                const todousers = response.data\r\n                this.setState(\r\n                    {\r\n                        'todousers': todousers\r\n                    }\r\n                )\r\n            }).catch(error => {\r\n            console.log(error)\r\n            this.setState({'todousers': []})\r\n        })\r\n\r\n        axios.get('http://127.0.0.1:8000/api/projects', {headers})\r\n            .then(response => {\r\n                const projects = response.data.results\r\n                this.setState(\r\n                    {\r\n                        'projects': projects\r\n                    }\r\n                )\r\n            }).catch(error => console.log(error)\r\n        )\r\n\r\n        axios.get('http://127.0.0.1:8000/api/todos', {headers})\r\n            .then(response => {\r\n                const todos = response.data.results\r\n                this.setState(\r\n                    {\r\n                        'todos': todos\r\n                    }\r\n                )\r\n            }).catch(error => console.log(error))\r\n        console.log(this.state.todos)\r\n    }\r\n\r\n    set_token(token) {\r\n        const cookies = new Cookies()\r\n        cookies.set('token', token)\r\n        this.setState({'token': token}, () => this.load_data())\r\n    }\r\n\r\n\r\n    deleteTodo(id) {\r\n        const headers = this.get_headers()\r\n        console.log(id)\r\n        axios.delete(`http://127.0.0.1:8000/api/todos/${id}`, {headers})\r\n            .then(response => {\r\n                this.setState({todos: this.state.todos.filter((todo) => todo.id !== id)})\r\n            }).catch(error => console.log(error))\r\n    }\r\n\r\n    deleteProject(id) {\r\n        const headers = this.get_headers()\r\n        console.log(id)\r\n        axios.delete(`http://127.0.0.1:8000/api/projects/${id}`, {headers})\r\n            .then(response => {\r\n                this.load_data()\r\n                // this.setState({projects: this.state.projects.filter((project) => project.id !== id)})\r\n            }).catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    createProject(project_name, project_user) {\r\n        const headers = this.get_headers()\r\n        const data = {project_name: project_name, project_user: [project_user]}\r\n        console.log(data)\r\n        axios.post(`http://127.0.0.1:8000/api/projects/`, data, {headers})\r\n            .then(response => {\r\n                // let new_project = response.data\r\n                // const author = this.state.authors.filter((item) => item.id === new_project.author)[0]\r\n                // new_project.author = author\r\n                // this.setState({books: [...this.state.books, new_project]})\r\n\r\n\r\n                this.load_data()\r\n            }).catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    is_authenticated() {\r\n\r\n        return this.state.token != '';\r\n    }\r\n\r\n    logout() {\r\n        this.set_token('')\r\n    }\r\n\r\n    get_token_from_storage() {\r\n        const cookies = new Cookies()\r\n        const token = cookies.get('token')\r\n        this.setState({'token': token}, () => this.load_data())\r\n    }\r\n\r\n    get_token(username, password) {\r\n        axios.post('http://127.0.0.1:8000/api-token-auth/', {username: username, password: password})\r\n            .then(response => {\r\n                this.set_token(response.data['token'])\r\n            }).catch(error => alert('Неверный логин или пароль'))\r\n    }\r\n\r\n    get_headers() {\r\n        let headers = {\r\n            'Content-Type': 'application/json'\r\n        }\r\n        console.log(this.state.token)\r\n        if (this.is_authenticated()) {\r\n            headers['Authorization'] = 'Token ' + this.state.token\r\n        }\r\n        console.log(\"AAAAAAAAAAAAAAAAAAAA\", headers)\r\n        return headers\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.get_token_from_storage()\r\n        // this.load_data()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TodoHeader></TodoHeader>\r\n                <HashRouter>\r\n                    <nav>\r\n                        <ul>\r\n                            <li>\r\n                                <Link to='/'>Пользователи</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/projects'>Проекты</Link>\r\n                            </li>\r\n\r\n\r\n                            <li>\r\n                                <Link to='/todos'>Заметки TODO</Link>\r\n                            </li>\r\n                            <li>\r\n                                {this.is_authenticated() ? <button onClick={() => this.logout()}>Logout</button> :\r\n                                    <Link to='/login'>Login</Link>}\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                    <Switch>\r\n                        {/*<Route exact path='/todos' component={() => <Todo todos={this.state.todos}*/}\r\n                        {/*                                                      deleteTodo={(id) => this.deleteTodo(id)}/>}/>*/}\r\n                        <Route exact path='/' component={() => <TodoUsersList todousers={this.state.todousers}/>}/>\r\n                        <Route exact path='/projects' component={() => <Projects projects={this.state.projects}\r\n                                                                                 deleteProject={(id) => this.deleteProject(id)}/>}/>\r\n                        <Route exact path='/projects/create'\r\n                               component={() => <ProjectForm createProject={(project_name, project_user) => this.createProject(project_name, project_user)}\r\n                                                             todousers={this.state.todousers}/>}/>\r\n\r\n\r\n                        <Route exact path='/todos' component={() => <Todo todos={this.state.todos}\r\n                                                                          deleteTodo={(id) => this.deleteTodo(id)}/>}/>\r\n                        <Route exact path='/login' component={() => <LoginForm\r\n                            get_token={(username, password) => this.get_token(username, password)}/>}/>\r\n                        <Route path='/projects/:id'>\r\n                            <TodoByProject todos={this.state.projects}/>} />\r\n                        </Route>\r\n                        <Route component={NotFound404}/>\r\n                    </Switch>\r\n                </HashRouter>\r\n                <TodoFooter></TodoFooter>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import '/bootstrap/dist/css/bootstrap.min.css'\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}